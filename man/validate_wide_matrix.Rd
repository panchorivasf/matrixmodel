% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate_wide_matrix.R
\name{validate_wide_matrix}
\alias{validate_wide_matrix}
\title{Validate Wide Matrix Data Format}
\usage{
validate_wide_matrix(df)
}
\arguments{
\item{df}{A data frame to validate. Expected to contain a 'PlotID' column and
matrix columns with names following the pattern 'S##_D##' (e.g., S01_D01,
S02_D15), where ## represents two-digit numbers.}
}
\value{
A character vector of error messages. If the data frame is valid,
  returns an empty character vector (length 0). If validation fails, returns
  a vector containing descriptive error messages for each issue found.
}
\description{
This function validates that a data frame conforms to the expected wide matrix
format for forest inventory data. It checks for the presence of required columns
and ensures matrix columns follow the expected naming convention and data types.
}
\examples{
# Valid data frame
valid_df <- data.frame(
  PlotID = c("Plot1", "Plot2"),
  S01_D01 = c(1.2, 1.5),
  S01_D02 = c(2.1, 2.3),
  S02_D01 = c(0.8, 1.1)
)
validate_wide_matrix(valid_df)  # Returns character(0)

# Invalid data frame - missing PlotID
invalid_df1 <- data.frame(
  Site = c("A", "B"),
  S01_D01 = c(1.2, 1.5)
)
validate_wide_matrix(invalid_df1)  # Returns error message

# Invalid data frame - no matrix columns
invalid_df2 <- data.frame(
  PlotID = c("Plot1", "Plot2"),
  SomeCol = c("a", "b")
)
validate_wide_matrix(invalid_df2)  # Returns error message

# Invalid data frame - non-numeric matrix columns
invalid_df3 <- data.frame(
  PlotID = c("Plot1", "Plot2"),
  S01_D01 = c("1.2", "1.5"),  # character instead of numeric
  S01_D02 = c(2.1, 2.3)
)
validate_wide_matrix(invalid_df3)  # Returns error message
}
