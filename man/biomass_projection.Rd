% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biomass_projection.R
\name{biomass_projection}
\alias{biomass_projection}
\title{Project forest biomass over time using mortality, upgrowth, and recruitment
models}
\usage{
biomass_projection(
  output_dir = NULL,
  cores = -1,
  plot_data = NULL,
  plot_id = NULL,
  dbh_ref = NULL,
  years = 50,
  m_model = "./models/model_mortality.rds",
  u_model = "./models/model_upgrowth.rds",
  r_model = "./models/model_recruitment1.rds"
)
}
\arguments{
\item{output_dir}{Directory where output files will be saved. Defaults to
current working directory if NULL.}

\item{cores}{Number of CPU cores to use for parallel processing. Use -1 to
use all available cores minus one.}

\item{plot_data}{Data frame containing plot data with species and diameter
group information.}

\item{plot_id}{Optional specific plot ID to process. If NULL, processes all
plots.}

\item{dbh_ref}{Data frame containing DBH reference data for different
diameter groups.}

\item{years}{Number of years to project forward. Default is 50 years.}

\item{m_model}{Path to mortality model RDS file.}

\item{u_model}{Path to upgrowth model RDS file.}

\item{r_model}{Path to recruitment model RDS file.}
}
\value{
Returns the path to the output directory containing all generated
  CSV files with projection results.
}
\description{
This function projects forest biomass dynamics over specified years using
pre-trained random forest models for mortality, upgrowth, and recruitment.
It handles both single plots and multiple plots in parallel, and generates
comprehensive output files for analysis.
}
\details{
The function creates a "model_output" directory containing:
\itemize{
  \item Detailed predictions for all plots and years
  \item Summary statistics by plot and year
  \item Year-level aggregates across plots
  \item Species-level summaries
  \item Diameter group projections
  \item Various combinations of plot, species, diameter group, and year
  summaries
}
}
\examples{
\dontrun{
# Process a single plot
result <- biomass_projection(
  plot_data = data,
  plot_id = "49628170910",
  dbh_ref = db_ref,
  years = 5
)

# Process all plots in parallel
result <- biomass_projection(
  plot_data = data,
  dbh_ref = db_ref,
  cores = 4,
  years = 10
)
}

}
